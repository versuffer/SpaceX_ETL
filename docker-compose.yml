version: '3.8'

volumes:
  postgres_volume:

networks:
  spacex_etl_network:

services:
  postgres_database:
    image: postgres:16.2
    container_name: postgres_database
    volumes:
      - postgres_volume:/var/lib/postgresql/data/
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_PORT: ${POSTGRES_PORT}
    ports:
      - "${POSTGRES_PORT}:5432"
    expose:
      - "${POSTGRES_PORT}"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U $POSTGRES_USER" ]
      interval: 2s
      timeout: 1s
      retries: 2
    networks:
      - spacex_etl_network

  etl_scheduler:
    build:
      dockerfile: Dockerfile_ETL
    container_name: etl_scheduler
    environment:
      POSTGRES_HOST: postgres_database
    env_file:
      - ".env"
    depends_on:
      postgres_database:
        condition: service_healthy
    networks:
      - spacex_etl_network

  etl_api:
    build:
      dockerfile: Dockerfile_API
    container_name: etl_api
    environment:
      POSTGRES_HOST: postgres_database
    env_file:
      - ".env"
    ports:
      - "8000:8000"
    depends_on:
      postgres_database:
        condition: service_healthy
    networks:
      - spacex_etl_network
